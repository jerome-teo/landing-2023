import { error } from '@sveltejs/kit';
import type { RequestEvent } from "./$types";
import * as EmailValidator from 'email-validator';
import { SERVICE_ACCT_EMAIL, PRIVATE_KEY } from '$env/static/private';
import { GoogleSpreadsheet } from "google-spreadsheet";
import { validateCaptcha } from '$lib/captchaValidator';

const SHEET_ID = "1ANWHf_xTo6Fjv9LgMGJ48MqUS0xnj6PwYmE16zwW3ts"

export async function POST({url}: RequestEvent): Promise<Response> {
  console.log("Processing POST request")
  const email = url.searchParams.get("email");
  const token = url.searchParams.get("token");
  console.log(token)

  if (email === null || !EmailValidator.validate(email)) {
    throw error(400, "Please provide a valid email")
  }

  if (token === null) {
    throw error(400, "Please provide a recatpcha token")
  } else {
    const resp = await validateCaptcha(token);
    console.log(resp)
    // If we should fail...
    if (resp.score < 0.6 || resp.action != "submit") {
      throw error(500, "Internal server error")
    }
  }

  const doc = new GoogleSpreadsheet(SHEET_ID);

  console.log({doc})

  await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: SERVICE_ACCT_EMAIL,
    private_key: PRIVATE_KEY,
  });

  await doc.loadInfo();

  const sheet = doc.sheetsByIndex[0];

  console.log({sheet})

  const row = await sheet.addRow({ email });

  console.log({row})

  return new Response("Ok");
}